logging.config=classpath:logback-spring.xml
# tomcat最大线程数，默认为200
server.tomcat.max-threads=800
server.port=19002
spring.application.name=vortex-ums
zookeeper.connectString=192.168.1.242:2181
server.kafka.address = 10.26.250.237:9092


# 主数据源，默认的
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://rm-bp121z4o908ct574e.mysql.rds.aliyuncs.com/cloud_management?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false&autoReconnect=true&serverTimezone=GMT
spring.datasource.username=vortex
spring.datasource.password=Vortex2017
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=10
spring.datasource.minIdle=20
spring.datasource.maxActive=200
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒 
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小 
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true


# 第二数据源
spring.datasource2.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource2.driverClassName=com.mysql.jdbc.Driver
spring.datasource2.url=jdbc:mysql://rm-bp121z4o908ct574e.mysql.rds.aliyuncs.com/cloud_management?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false&autoReconnect=true&serverTimezone=GMT
spring.datasource2.username=vortex
spring.datasource2.password=Vortex2017
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource2.initialSize=5
spring.datasource2.minIdle=5
spring.datasource2.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource2.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
spring.datasource2.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒 
spring.datasource2.minEvictableIdleTimeMillis=300000
spring.datasource2.validationQuery=SELECT 1 FROM DUAL
spring.datasource2.testWhileIdle=true
spring.datasource2.testOnBorrow=false
spring.datasource2.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小 
spring.datasource2.poolPreparedStatements=true
spring.datasource2.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 
spring.datasource2.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource2.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource2.useGlobalDataSourceStat=true

#hibernate
hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
hibernate.hbm2ddl.auto=none
hibernate.show_sql=false
hibernate.format_sql=false
hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext
hibernate.packagesToScan=com.vortex.cloud



# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=r-bp1839230b172934.redis.rds.aliyuncs.com
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=Vortex2017
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=-1
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0

#eureka 的注册地址
eureka.client.service-url.defaultZone=http://120.26.218.105:${eureka.port:12022}/eureka/

# gateway 的地址，调用接口的时候需要
URL_GATEWAY=http://120.26.218.105:8082/